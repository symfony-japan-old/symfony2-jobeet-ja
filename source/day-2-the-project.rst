2日目: このプロジェクトについて
==============================
.. include:: common/original.rst.inc

| 1日目は、まだコードを一行も書いていませんが、環境のセットアップと、空の Symfony プロジェクトを作成しました。
| 今日は、プロジェクトの仕様についてです。最初にコードに飛び込む前に、もう少しプロジェクトについて説明してみましょう。
| 以下のセクションでは、いくつかの単純なストーリーでプロジェクトの最初のバージョンで実装する機能について説明します。

ユーザーストーリー
------------------

| Jobeet の ウェブサイトは、4 つのユーザータイプがあります：管理者（ウェブサイトを所有し、管理している）、ユーザー（仕事を探してウェブサイトを訪問します）、投稿者（求人を投稿する為にウェブサイトを訪問します）、アフィリエイト（彼のウェブサイト上で求人を再発行します）。
| 元のチュートリアルでは、2 つのアプリケーションを作る必要がありました。ユーザがウェブサイトと対話するフロントエンドとウェブサイトを管理者が管理するバックエンドです。私たちはもはや Symfony 2.3.2 を使用してこのようなことはしないでしょう。
| 一つだけのアプリケーションを持ち、その中に管理者のために隔離されセキュリティで保護されたセクションを持つでしょう。

ストーリー F1： ホームページでは、ユーザーは最新の有効な求人を閲覧します
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| ユーザーが Jobeet のウェブサイトに来るとき、彼はアクティブな求人のリストを見ています。求人は、カテゴリ別に並べられ、且つ、新しい求人を最初にして公開日順に並べられています。
| それぞれの求人は場所、可能な役職、および、会社名のみが表示されます。
| 各カテゴリでは、最初の 10 個の求人がリストに表示されます。そして、指定されたカテゴリ（ストーリー F2 ）のすべての求人を表示する一つのリンクを表示します。
| ホームページでは、ユーザーは、求人リスト（ストーリー F3）を絞り込むか、新しい求人（ストーリー F5 ）を投稿することができます。

ストーリー F2：ユーザーが特定のカテゴリ内のすべての求人を問い合わせることができます
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| ユーザーはカテゴリ名やホームページの「more jobs」リンクをクリックすると、日付順に並べられたこのカテゴリのすべての求人を見ることが出来ます。
| リストはページごとに20件の求人でページ分割されています。

ストーリー F3：ユーザーは複数のキーワードでリストを絞込みます
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ユーザはいくつかのキーワードで絞込み検索できます。場所、役職、カテゴリ、会社名欄にある単語をキーワードとすることが出来ます。

ストーリー F4：ユーザーはより詳細な情報を表示する為、求人をクリックします
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ユーザは、より詳細な情報を表示する為に、リストから求人を選択することができます。

ストーリー F5：ユーザーは、求人を投稿します
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ユーザーは、求人を投稿することができます。求人は、複数の情報から構成されます。

* 会社
* タイプ（フルタイム、パートタイムもしくはフリーランス）
* ロゴ（オプション）
* URL（オプション）
* 役職
* 場所
* カテゴリ（ユーザーは、選択可能なカテゴリのリストから選びます）
* 仕事の説明（URLとメールが自動的にリンクされます）
* 応募方法（URLとメールは自動的にリンクされます）
* 公開（アフィリエイトのウェブサイト上でも求人を公開することが出来るかどうか）
* Eメール（投稿者の電子メール）

| 手続きは2つのプロセスのみです。まず、ユーザーは仕事を説明するために、必要なすべての情報をフォームに入力した後、最終的な求人ページをプレビューすることにより、情報を検証します。
| 仕事を投稿するアカウントを作成する必要はありません。
| 求人は（作成されたときにユーザに与えられたトークンによって保護された）特定のURLのみで変更することが出来ます。
| 各求人は30日間有効です（これは管理者によって設定されます）。
| ユーザーは戻ってきて再度アクティブにするか、5日未満で期限切れとなる場合のみ、求人の期間の検証を30日以上に広げることが出来ます。

ストーリーF6：ユーザーがアフィリエイトになるために実施すること
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ユーザーがアフィリエイトになり、且つ、 Jobeet API を使用することを承認されるために、次のような情報を提供する必要があります。

*  名前
*  Eメール
*  ウェブサイトのURL
*  Name
*  Email
*  Website URL

アフィリエイトのアカウントは管理者（ストーリー B3 ）によって有効化されなければなりません。有効化した後は、アフィリエイトは API で利用するトークンを電子メールで受け取ります。

ストーリー F7：アフィリエイトは現在有効な求人のリストを取得します
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| アフィリエイトは、彼のアフィリエイトトークンを使用してAPIを呼び出して、現在の求人リストを取得できます。リストは、 XML 、 JSON や YAML 形式で返すことができます。
| アフィリエイトは、返される求人数を制限することが出来、また、カテゴリを指定することでクエリを絞り込むことができます。

ストーリー B1：管理者はウェブサイトを設定します
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

管理者はカテゴリを編集し、ウェブサイト上で有効にできます。

ストーリー B2：管理者はジョブを管理します
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

管理者は投稿された求人を編集、削除することができます。

ストーリー B3：管理者は、関連会社を管理します
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| 管理者は、アフィリエイトの作成または編集ができます。彼は、アフィリエイトを有効化する責任があり、また、それを無効にすることができます。
| 管理者は新しいアフィリエイトを有効にすると、システムは、アフィリエイトが使用する一意のトークンを作成します。
| 開発者は、初日からコードを書き始めることはありません。まず、あなたはプロジェクトの要件を収集する必要があり、プロジェクトがどのように動作するようになっているかを理解する必要があります。
| 今日はここまでです。では、また明日！

.. include:: common/license.rst.inc
